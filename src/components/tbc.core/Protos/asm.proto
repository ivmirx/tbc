syntax = "proto3";

option csharp_namespace = "Tbc.Protocol";

package inject;

service AssemblyLoader {
  rpc LoadAssembly (LoadDynamicAssemblyRequest) returns (Outcome);
  rpc Exec (ExecuteCommandRequest) returns (Outcome);
  
  rpc SynchronizeDependencies(CachedAssemblyState) returns (stream AssemblyReference);
  rpc RequestCommand(Unit) returns (stream ExecuteCommandRequest);
}

message CachedAssemblyState 
{
  repeated CachedAssembly cachedAssemblies = 1; 
}

message CachedAssembly
{
  string assemblyName = 1;
  uint64 modificationTime = 2;
}

message Outcome {
  bool success = 1;
  repeated Message messages = 2;
}

message Message {
  string message = 1;
}

message AssemblyReference
{
  string assemblyName = 1;
  string assemblyLocation = 2;
  uint64 modificationTime = 3;
  bytes peBytes = 4;
}

message LoadDynamicAssemblyRequest {
  bytes peBytes = 1;
  bytes pdbBytes = 2;
  string assemblyName = 3;
  string primaryTypeName = 4;
}

message ExecuteCommandRequest {
  string command = 1;
  repeated string args = 2;
}

message Unit {
}